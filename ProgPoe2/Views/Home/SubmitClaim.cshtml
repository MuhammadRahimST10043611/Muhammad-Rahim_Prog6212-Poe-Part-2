@model Claim // The model passed to this view is a Claim object

<h2>Submit New Claim</h2> // Heading for the page

// Form for submitting a new claim, enctype="multipart/form-data" allows file uploads 
<form asp-action="SubmitClaim" method="post" enctype="multipart/form-data">

    // Input for Lecturer Name
    <div class="form-group">
        <label asp-for="LecturerName">Lecturer Name</label> // Label for the LecturerName input
        <input asp-for="LecturerName" class="form-control" required /> // Input field for Lecturer Name, required
    </div>

    // Input for Hours Worked
    <div class="form-group">
        <label asp-for="HoursWorked">Hours Worked</label> // Label for Hours Worked input
        <input asp-for="HoursWorked" type="number" step="0.5" class="form-control" required /> // Input field for hours worked, number type with step of 0.5
    </div>

    // Input for Hourly Rate
    <div class="form-group">
        <label asp-for="HourlyRate">Hourly Rate (R)</label> // Label for Hourly Rate input
        <input asp-for="HourlyRate" type="number" step="0.01" class="form-control" required /> // Input field for hourly rate, number type with step of 0.01
    </div>

    // Input for additional notes
    <div class="form-group">
        <label asp-for="Notes">Additional Notes</label> // Label for the Notes input
        <textarea asp-for="Notes" class="form-control"></textarea> // Text area for additional notes
    </div>

    // Input for uploading a supporting document, restricted to certain file types and a max size of 5MB
    <div class="form-group">
        <label for="file">Supporting Document (Max 5MB, PDF, Word, or Excel only)</label> // Label for file input
        <input type="file" id="file" name="file" class="form-control-file" accept=".pdf,.doc,.docx,.xls,.xlsx" /> // File input with accepted file types
    </div>

    // Submit button for the form
    <button type="submit" class="btn btn-primary">Submit Claim</button> // Button to submit the form
</form>

// Displays validation errors if the form is invalid
@if (!ViewData.ModelState.IsValid)
{
    <div class="alert alert-danger">
        <ul>
            @foreach (var modelState in ViewData.ModelState.Values) // Loop through model errors
            {
                foreach (var error in modelState.Errors)
                {
                    <li>@error.ErrorMessage</li>
                    // Display each error message
                }
            }
        </ul>
    </div>
}
